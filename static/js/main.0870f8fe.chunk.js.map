{"version":3,"sources":["components.js","NewImages.js","App.js","index.js"],"names":["Container","styled","div","Input","Image","ImagesContainer","Button","button","NewImages","newImage","map","element","index","src","link","alt","name","href","download","style","color","fontSize","icon","faDownload","App","useState","image","setImage","setNewImage","isUploaded","setIsUploaded","isCompressed","setIsCompressed","handleReset","useEffect","onClick","e","preventDefault","length","newData","filter","handleDeleteImage","faMinusCircle","type","id","accept","multiple","onChange","Object","values","target","files","forEach","push","URL","createObjectURL","size","handleChangeImage","htmlFor","options","maxSizeMB","maxWidthOrHeight","useWebWorker","alert","imageCompression","then","output","downloadLink","handleCompress","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0870f8fe.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-image: url(\"https://images.pexels.com/photos/2433985/pexels-photo-2433985.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\");\r\n  background-size: cover;\r\n  background-position: center center;\r\n`;\r\n\r\nconst Input = styled.div`\r\n  input {\r\n    display: none;\r\n  }\r\n  label {\r\n    padding: 10px 20px;\r\n    margin: 10px 0;\r\n    border: 1px solid #fff;\r\n    background: rgba(100, 100, 100, 0.7);\r\n    color: #fff;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background: rgba(100, 100, 100, 0.8);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Image = styled.div`\r\n  position: relative;\r\n  margin: 10px 20px 0 0;\r\n  img {\r\n    width: 500px;\r\n    height: 290px;\r\n    object-fit: fill;\r\n    object-position: center center;\r\n    @media screen and (max-width: 650px) {\r\n      width: 300px;\r\n      height: 290px;\r\n    }\r\n  }\r\n  button,\r\n  a {\r\n    border: none;\r\n    position: absolute;\r\n    cursor: pointer;\r\n    border-radius: 50%;\r\n    &:hover {\r\n      box-shadow: -10px 10px 20px 5px #000;\r\n    }\r\n  }\r\n  button {\r\n    top: -10px;\r\n    right: -10px;\r\n    background: #fff;\r\n  }\r\n  a {\r\n    top: 5px;\r\n    right: 5px;\r\n    background: transparent;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst ImagesContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 600px;\r\n  overflow-x: scroll;\r\n  @media screen and (max-width: 650px) {\r\n    width: 90%;\r\n  }\r\n`;\r\nconst Button = styled.button`\r\n  padding: 10px 20px;\r\n  margin: 10px 0;\r\n  border: 1px solid #fff;\r\n  background: rgba(100, 100, 100, 0.7);\r\n  color: #fff;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: rgba(100, 100, 100, 0.8);\r\n  }\r\n  @media screen and (max-width: 650px) {\r\n    padding: 5px 20px;\r\n  }\r\n`;\r\n\r\nexport { Container, Input, Image, ImagesContainer, Button };\r\n","import { Image, ImagesContainer } from \"./components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faDownload} from '@fortawesome/free-solid-svg-icons'\r\nconst NewImages = ({ newImage }) => {\r\n  return (\r\n    <ImagesContainer>\r\n      {newImage.map((element, index) => (\r\n        <Image key={index}>\r\n          <img src={element.link} alt={element.name} />\r\n          <a href={element.link} download={element.name}>\r\n            <FontAwesomeIcon\r\n              style={{\r\n                color: \"#fff\",\r\n                fontSize: \"30px\",\r\n              }}\r\n              icon={faDownload}\r\n            />\r\n          </a>\r\n        </Image>\r\n      ))}\r\n    </ImagesContainer>\r\n  );\r\n};\r\n\r\nexport default NewImages;\r\n","import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport imageCompression from \"browser-image-compression\";\nimport NewImages from \"./NewImages\";\nimport { Container, Input, Image, ImagesContainer, Button } from \"./components\";\n\nconst App = () => {\n  const [image, setImage] = useState([]);\n  const [newImage, setNewImage] = useState([]);\n  const [isUploaded, setIsUploaded] = useState(false);\n  const [isCompressed, setIsCompressed] = useState(false);\n\n  const handleChangeImage = (e) => {\n    e.preventDefault();\n    let newData = [];\n    Object.values(e.target.files).forEach((element) => {\n      newData.push({\n        image: element,\n        link: URL.createObjectURL(element),\n        name: element.name,\n        size: element.size,\n      });\n    });\n    setImage(newData);\n    setIsUploaded(true);\n    setIsCompressed(false);\n  };\n  const handleCompress = () => {\n    const options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 500,\n      useWebWorker: true,\n    };\n    image.forEach((element) => {\n      if (element.size / 1024 <= options.maxSizeMB) {\n        alert(\"Image is too small, can't be Compressed!\");\n        setIsCompressed(false);\n        return;\n      } else {\n        let newData = [];\n        imageCompression(element.image, options).then((output) => {\n          const downloadLink = URL.createObjectURL(output);\n          newData.push({\n            link: downloadLink,\n            name: element.name,\n            size: output.size,\n          });\n        });\n        setNewImage([...image, ...newData]);\n      }\n    });\n    setIsCompressed(true);\n  };\n  const handleDeleteImage = (e, link) => {\n    e.preventDefault();\n    if (image.length === 1) {\n      handleReset();\n    } else {\n      const oldData = [...image];\n      const newData = oldData.filter((element) => element.link !== link);\n      setImage(newData);\n    }\n  };\n  const handleReset = () => {\n    setImage([]);\n    setNewImage([]);\n    setIsCompressed(false);\n    setIsUploaded(false);\n  };\n\n  useEffect(() => {\n    // handleCompress();\n    setIsCompressed(false);\n  }, [image]);\n\n  return (\n    <Container>\n      {isUploaded ? (\n        <ImagesContainer>\n          {image.map((element, index) => (\n            <Image key={index}>\n              <img src={element.link} alt={element.name} />\n              <button onClick={(e) => handleDeleteImage(e, element.link)}>\n                <FontAwesomeIcon\n                  style={{\n                    color: \"red\",\n                    fontSize: \"30px\",\n                  }}\n                  icon={faMinusCircle}\n                />\n              </button>\n            </Image>\n          ))}\n        </ImagesContainer>\n      ) : (\n        <Input>\n          <input\n            type=\"file\"\n            id=\"file\"\n            accept=\"image/*\"\n            multiple\n            onChange={(e) => handleChangeImage(e)}\n          />\n          <label htmlFor=\"file\">Select your images</label>\n        </Input>\n      )}\n      {isUploaded && (\n        <Button onClick={(e) => handleCompress(e)}>Compress</Button>\n      )}\n      {isCompressed && (\n        <>\n          <NewImages newImage={newImage} />\n          <Button onClick={(e) => handleReset(e)}>Reset</Button>\n        </>\n      )}\n    </Container>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}